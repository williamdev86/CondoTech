<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Gerenciamento de Condomínios</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="/condominios/cadastro" class="btn btn-sm btn-outline-primary">
                <i class="fas fa-plus-circle me-1"></i>Novo Condomínio
            </a>
            <a href="/condominios/importar" class="btn btn-sm btn-outline-success">
                <i class="fas fa-file-import me-1"></i>Importar Excel
            </a>
        </div>
    </div>
</div>

<!-- Barra de pesquisa e configurações de paginação -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row">
            <div class="col-md-6 mb-3">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" id="searchInput" class="form-control" placeholder="Pesquisar condomínios...">
                    <button type="button" id="clearSearch" class="btn btn-outline-secondary d-none">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="form-text mt-1">Digite para filtrar por qualquer campo</div>
            </div>
            <div class="col-md-6 mb-3 d-flex justify-content-md-end align-items-center">
                <div class="d-flex align-items-center">
                    <label for="pageSize" class="me-2">Mostrar:</label>
                    <select id="pageSize" class="form-select form-select-sm" style="width: auto;">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="all">Todos</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Filtros por Status -->
        <div class="row">
            <div class="col-12">
                <div class="d-flex flex-wrap gap-2">
                    <label class="me-2 d-flex align-items-center">Filtrar por status:</label>
                    <button type="button" class="btn btn-sm btn-outline-secondary status-filter" data-status="todos">
                        Todos
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-success status-filter" data-status="Ativo">
                        <span class="badge bg-success me-1">•</span> Ativo
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-warning status-filter" data-status="Prospecto">
                        <span class="badge bg-warning text-dark me-1">•</span> Prospecto
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-info status-filter" data-status="Implementação">
                        <span class="badge bg-info text-dark me-1">•</span> Implementação
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-primary status-filter" data-status="Abre Portas">
                        <span class="badge bg-primary me-1">•</span> Abre Portas
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary status-filter" data-status="Agendado Visita">
                        <span class="badge bg-secondary me-1">•</span> Agendado Visita
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger status-filter" data-status="Inativo">
                        <span class="badge bg-danger me-1">•</span> Inativo
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div>
            <h5 class="mb-0 d-inline-block">Lista de Condomínios 
                <span id="filterStatus" class="badge bg-secondary ms-2 d-none">Filtro: <span id="currentStatusFilter">Todos</span></span>
            </h5>
        </div>
        <div class="d-flex align-items-center">
            <span id="searchStats" class="text-muted small me-3"></span>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-info dropdown-toggle" type="button" id="downloadMenu" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-download me-1"></i>Exportar
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="downloadMenu">
                    <li><a class="dropdown-item" href="/condominios/exportar-excel">
                        <i class="fas fa-table me-2"></i>Todos os condomínios
                    </a></li>
                    <li><a class="dropdown-item" href="#" id="downloadFilteredBtn">
                        <i class="fas fa-filter me-2"></i>Condomínios filtrados
                    </a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Nome</th>
                        <th>Endereço</th>
                        <th>CEP</th>
                        <th>Cidade/UF</th>
                        <th>Telefone</th>
                        <th>Email</th>
                        <th>Síndico</th>
                        <th>Status</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody id="condominioTableBody">
                    <% if (condominios && condominios.length > 0) { %>
                        <% condominios.forEach(condominio => { %>
                            <tr class="condominio-row" data-status="<%= condominio.status %>">
                                <td><%= condominio.id %></td>
                                <td><%= condominio.nome %></td>
                                <td><%= condominio.endereco %></td>
                                <td><%= condominio.cep %></td>
                                <td><%= condominio.cidade %>/<%= condominio.estado %></td>
                                <td><%= condominio.telefone %></td>
                                <td><%= condominio.email %></td>
                                <td><%= condominio.sindico %></td>
                                <td>
                                    <% if (condominio.status === 'Ativo') { %>
                                        <span class="badge bg-success">Ativo</span>
                                    <% } else if (condominio.status === 'Prospecto') { %>
                                        <span class="badge bg-warning text-dark">Prospecto</span>
                                    <% } else if (condominio.status === 'Implementação') { %>
                                        <span class="badge bg-info text-dark">Implementação</span>
                                    <% } else if (condominio.status === 'Abre Portas') { %>
                                        <span class="badge bg-primary">Abre Portas</span>
                                    <% } else if (condominio.status === 'Agendado Visita') { %>
                                        <span class="badge bg-secondary">Agendado Visita</span>
                                    <% } else { %>
                                        <span class="badge bg-danger">Inativo</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a href="/condominios/editar/<%= condominio.id %>" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form action="/condominios/excluir/<%= condominio.id %>" method="POST" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-danger btn-delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr id="no-condominios-row">
                            <td colspan="10" class="text-center">Nenhum condomínio cadastrado</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer">
        <div class="row align-items-center">
            <div class="col-md-6 mb-2 mb-md-0">
                <div id="tableInfo" class="text-muted small">
                    Mostrando 1 a 10 de <%= condominios ? condominios.length : 0 %> condomínios
                </div>
            </div>
            <div class="col-md-6">
                <nav aria-label="Paginação de condomínios">
                    <ul id="pagination" class="pagination pagination-sm justify-content-md-end mb-0">
                        <!-- Paginação será gerada pelo JavaScript -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<div id="no-results-message" class="alert alert-info d-none mt-3">
    Nenhum condomínio encontrado para a pesquisa atual.
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Elementos DOM
    const searchInput = document.getElementById('searchInput');
    const clearButton = document.getElementById('clearSearch');
    const statsDisplay = document.getElementById('searchStats');
    const noResultsMessage = document.getElementById('no-results-message');
    const tableRows = document.querySelectorAll('.condominio-row');
    const tableInfo = document.getElementById('tableInfo');
    const pagination = document.getElementById('pagination');
    const pageSizeSelect = document.getElementById('pageSize');
    const statusFilters = document.querySelectorAll('.status-filter');
    const filterStatusBadge = document.getElementById('filterStatus');
    const currentStatusFilterText = document.getElementById('currentStatusFilter');
    
    const totalItems = tableRows.length;
    let currentPage = 1;
    let pageSize = 10;
    let filteredRows = [...tableRows];
    let currentStatusFilter = 'todos';
    
    // Inicializar paginação
    initPagination();
    
    // Configurar filtros de status
    setupStatusFilters();
    
    // Função para filtrar a tabela
    function filterTable() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        
        // Mostrar/esconder o botão de limpar
        if (searchTerm.length > 0) {
            clearButton.classList.remove('d-none');
        } else {
            clearButton.classList.add('d-none');
        }
        
        // Filtrar linhas
        filteredRows = [];
        let visibleCount = 0;
        
        tableRows.forEach(row => {
            const rowText = row.textContent.toLowerCase();
            const rowStatus = row.dataset.status;
            
            // Aplicar filtro de texto e filtro de status
            const matchesText = rowText.includes(searchTerm);
            const matchesStatus = (currentStatusFilter === 'todos') || (rowStatus === currentStatusFilter);
            
            if (matchesText && matchesStatus) {
                row.dataset.visible = 'true';
                filteredRows.push(row);
                visibleCount++;
            } else {
                row.dataset.visible = 'false';
            }
            
            // Inicialmente ocultamos todas as linhas, a paginação mostrará as corretas
            row.classList.add('d-none');
        });
        
        // Atualizar estatísticas
        if (searchTerm.length > 0 || currentStatusFilter !== 'todos') {
            let statsText = `Encontrados ${visibleCount} de ${totalItems} condomínios`;
            statsDisplay.textContent = statsText;
            
            // Mostrar mensagem de nenhum resultado se necessário
            if (visibleCount === 0) {
                noResultsMessage.classList.remove('d-none');
            } else { noResultsMessage.classList.add('d-none');
            }
        } else {
            statsDisplay.textContent = '';
            noResultsMessage.classList.add('d-none');
        }
        
        // Reiniciar para a primeira página após filtrar
        currentPage = 1;
        updatePagination();
        showCurrentPage();
    }
    
    // Configurar filtros de status
    function setupStatusFilters() {
        statusFilters.forEach(button => {
            button.addEventListener('click', function() {
                // Remover classe ativa de todos os botões
                statusFilters.forEach(btn => btn.classList.remove('active'));
                
                // Adicionar classe ativa ao botão clicado
                this.classList.add('active');
                
                // Atualizar filtro atual
                currentStatusFilter = this.dataset.status;
                
                // Atualizar texto do filtro atual
                if (currentStatusFilter === 'todos') {
                    filterStatusBadge.classList.add('d-none');
                } else {
                    currentStatusFilterText.textContent = currentStatusFilter;
                    filterStatusBadge.classList.remove('d-none');
                }
                
                // Aplicar filtro
                filterTable();
            });
        });
        
        // Ativar filtro "Todos" por padrão
        statusFilters[0].classList.add('active');
    }
    
    // Inicializar paginação
    function initPagination() {
        // Configurar o tamanho da página a partir do select
        pageSizeSelect.addEventListener('change', function() {
            const newSize = this.value;
            pageSize = newSize === 'all' ? filteredRows.length : parseInt(newSize);
            currentPage = 1;
            updatePagination();
            showCurrentPage();
        });
        
        // Configuração inicial
        updatePagination();
        showCurrentPage();
    }
    
    // Atualizar controles de paginação
    function updatePagination() {
        const totalPages = pageSize === 'all' ? 1 : Math.ceil(filteredRows.length / pageSize);
        
        // Atualizar informações da tabela
        if (filteredRows.length === 0) {
            tableInfo.textContent = 'Nenhum condomínio para mostrar';
        } else {
            const start = (currentPage - 1) * pageSize + 1;
            const end = Math.min(currentPage * pageSize, filteredRows.length);
            tableInfo.textContent = `Mostrando ${start} a ${end} de ${filteredRows.length} condomínios`;
        }
        
        // Limpar paginação atual
        pagination.innerHTML = '';
        
        // Não mostrar paginação se tivermos apenas uma página
        if (totalPages <= 1) {
            return;
        }
        
        // Criar elementos de paginação
        
        // Botão Anterior
        const prevLi = document.createElement('li');
        prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
        const prevLink = document.createElement('a');
        prevLink.className = 'page-link';
        prevLink.href = '#';
        prevLink.innerHTML = '&laquo;';
        prevLink.setAttribute('aria-label', 'Anterior');
        prevLink.addEventListener('click', function(e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                updatePagination();
                showCurrentPage();
            }
        });
        prevLi.appendChild(prevLink);
        pagination.appendChild(prevLi);
        
        // Botões de página
        const maxPageButtons = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxPageButtons / 2));
        let endPage = Math.min(totalPages, startPage + maxPageButtons - 1);
        
        // Ajustar startPage se estamos perto do final
        if (endPage - startPage + 1 < maxPageButtons) {
            startPage = Math.max(1, endPage - maxPageButtons + 1);
        }
        
        for (let i = startPage; i <= endPage; i++) {
            const pageLi = document.createElement('li');
            pageLi.className = `page-item ${i === currentPage ? 'active' : ''}`;
            const pageLink = document.createElement('a');
            pageLink.className = 'page-link';
            pageLink.href = '#';
            pageLink.textContent = i;
            pageLink.addEventListener('click', function(e) {
                e.preventDefault();
                currentPage = i;
                updatePagination();
                showCurrentPage();
            });
            pageLi.appendChild(pageLink);
            pagination.appendChild(pageLi);
        }
        
        // Botão Próximo
        const nextLi = document.createElement('li');
        nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
        const nextLink = document.createElement('a');
        nextLink.className = 'page-link';
        nextLink.href = '#';
        nextLink.innerHTML = '&raquo;';
        nextLink.setAttribute('aria-label', 'Próximo');
        nextLink.addEventListener('click', function(e) {
            e.preventDefault();
            if (currentPage < totalPages) {
                currentPage++;
                updatePagination();
                showCurrentPage();
            }
        });
        nextLi.appendChild(nextLink);
        pagination.appendChild(nextLi);
    }
    
    // Mostrar linhas da página atual
    function showCurrentPage() {
        // Ocultar todas as linhas primeiro
        filteredRows.forEach(row => {
            row.classList.add('d-none');
        });
        
        // Mostrar apenas as linhas da página atual
        if (pageSize === 'all') {
            // Mostrar todas as linhas filtradas
            filteredRows.forEach(row => {
                row.classList.remove('d-none');
            });
        } else {
            // Mostrar apenas as linhas da página atual
            const start = (currentPage - 1) * pageSize;
            const end = Math.min(start + pageSize, filteredRows.length);
            
            for (let i = start; i < end; i++) {
                if (filteredRows[i]) {
                    filteredRows[i].classList.remove('d-none');
                }
            }
        }
    }
    
    // Função para download da planilha com filtros
    function downloadExcelWithFilters() {
        // Obter valores dos filtros atuais
        const statusFilter = currentStatusFilter;
        const searchTerm = searchInput.value.trim();
        
        // Construir URL com parâmetros de filtro
        let downloadUrl = '/condominios/exportar-excel';
        const params = [];
        
        if (statusFilter && statusFilter !== 'todos') {
            params.push(`status=${encodeURIComponent(statusFilter)}`);
        }
        
        if (searchTerm) {
            params.push(`busca=${encodeURIComponent(searchTerm)}`);
        }
        
        if (params.length > 0) {
            downloadUrl += '?' + params.join('&');
        }
        
        // Redirecionar para a URL de download
        window.location.href = downloadUrl;
    }
    
    // Eventos
    searchInput.addEventListener('input', filterTable);
    
    // Botão para limpar a pesquisa
    clearButton.addEventListener('click', function() {
        searchInput.value = '';
        filterTable();
        searchInput.focus();
    });
    
    // Adicionar evento ao botão de download com filtros
    const downloadFilteredBtn = document.getElementById('downloadFilteredBtn');
    if (downloadFilteredBtn) {
        downloadFilteredBtn.addEventListener('click', function(e) {
            e.preventDefault();
            downloadExcelWithFilters();
        });
    }
    
    // Confirmação para exclusão
    document.querySelectorAll('.btn-delete').forEach(button => {
        button.addEventListener('click', function(e) {
            if (!confirm('Tem certeza que deseja excluir este condomínio?')) {
                e.preventDefault();
            }
        });
    });
});
</script>

<style>
.page-link {
    cursor: pointer;
}
.disabled .page-link {
    cursor: not-allowed;
}
.status-filter.active {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    font-weight: bold;
}
.status-filter .badge {
    border-radius: 50%;
    width: 8px;
    height: 8px;
    padding: 0;
    display: inline-block;
}
</style>